@charset "UTF-8";

$rem-fallback: false !default;
$rem-px-only: false !default;
$vw-fallback: false !default;
$vw-px-only: false !default;

@function de-unit($unit) {
    @return calc($unit / ($unit * 0 + 1));
}

@function rem-separator($list, $separator: false) {
    @if $separator == 'comma' or $separator == 'space' {
        @return append($list, null, $separator);
    }

    @if function-exists('list-separator') == true {
        @return list-separator($list);
    }
    // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)
    $test-list: ();
    @each $item in $list {
        $test-list: append($test-list, $item, space);
    }

    @return if($test-list == $list, space, comma);
}

@function rem-convert($to, $values...) {
    $result: ();
    $separator: rem-separator($values);

    @each $value in $values {
        @if type-of($value) == 'number' and unit($value) == 'rem' and $to == 'px' {
            $result: append($result, calc($value / 1rem) * $html-fz + 0px, $separator);
        } @else if type-of($value) == 'number' and unit($value) == 'px' and $to == 'rem' {
            $result: append($result, calc($value / $html-fz) + 0rem, $separator);
        } @else if type-of($value) == 'list' {
            $value-separator: rem-separator($value);
            $value: rem-convert($to, $value...);
            $value: rem-separator($value, $value-separator);
            $result: append($result, $value, $separator);
        } @else {
            $result: append($result, $value, $separator);
        }
    }

    @return if(length($result) == 1, nth($result, 1), $result);
}

@function rem($values...) {
    @if $rem-px-only {
        @return rem-convert(px, $values...);
    } @else {
        @return rem-convert(rem, $values...);
    }
}

@function vw-convert($to, $values...) {
    $result: ();
    $separator: rem-separator($values);

    @each $value in $values {
        @if type-of($value) == 'number' and unit($value) == 'vw' and $to == 'px' {
            $result: append($result, de-unit(calc($value / 100vw) * $vw-viewport) + 0px, $separator);
        } @else if type-of($value) == 'number' and unit($value) == 'px' and $to == 'vw' {
            $result: append($result, de-unit(calc($value / $vw-viewport) * 100) + 0vw, $separator);
        } @else if type-of($value) == 'list' {
            $value-separator: rem-separator($value);
            $value: vw-convert($to, $value...);
            $value: rem-separator($value, $value-separator);
            $result: append($result, $value, $separator);
        } @else {
            $result: append($result, $value, $separator);
        }
    }

    @return if(length($result) == 1, nth($result, 1), $result);
}

@function vw($values...) {
    @if $vw-px-only {
        @return vw-convert(px, $values...);
    } @else {
        @return vw-convert(vw, $values...);
    }
}
